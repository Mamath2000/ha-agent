# =============================================================================
# Script de d√©ploiement r√©seau HA-Agent
# D√©ploie l'agent sur plusieurs PC via r√©seau
# =============================================================================

param(
    [string[]]$ComputerNames = @(),  # Liste des PC cibles
    [string]$NetworkPath = "",       # Chemin r√©seau partag√© (optionnel)
    [string]$MQTTBroker = "192.168.100.9",
    [PSCredential]$Credential = $null,
    [switch]$CreateService = $false
)

if ($ComputerNames.Count -eq 0) {
    Write-Host "Usage: .\deploy-network.ps1 -ComputerNames PC1,PC2,PC3 -MQTTBroker 192.168.1.100" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "Param√®tres:" -ForegroundColor Cyan
    Write-Host "  -ComputerNames    : Liste des noms de PC (s√©par√©s par virgule)" -ForegroundColor White
    Write-Host "  -NetworkPath      : Chemin r√©seau partag√© (ex: \\server\share\ha-agent)" -ForegroundColor White
    Write-Host "  -MQTTBroker       : Adresse IP du broker MQTT" -ForegroundColor White
    Write-Host "  -Credential       : Identifiants r√©seau (optionnel)" -ForegroundColor White
    Write-Host "  -CreateService    : Cr√©er une t√¢che planifi√©e sur chaque PC" -ForegroundColor White
    exit 1
}

Write-Host "=== D√âPLOIEMENT HA-AGENT SUR R√âSEAU ===" -ForegroundColor Green
Write-Host "PC cibles: $($ComputerNames -join ', ')" -ForegroundColor Yellow
Write-Host "Broker MQTT: $MQTTBroker" -ForegroundColor Yellow

# Pr√©parer les fichiers localement
$tempPath = "$env:TEMP\ha-agent-deploy"
if (Test-Path $tempPath) {
    Remove-Item $tempPath -Recurse -Force
}
New-Item -Path $tempPath -ItemType Directory -Force | Out-Null

# Copier les fichiers n√©cessaires
$filesToCopy = @(
    "ha-agent.ps1",
    "ha-agent-service.ps1", 
    "install.ps1"
)

foreach ($file in $filesToCopy) {
    if (Test-Path $file) {
        Copy-Item $file $tempPath -Force
        Write-Host "‚úÖ Pr√©par√©: $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Fichier manquant: $file" -ForegroundColor Red
        exit 1
    }
}

# Cr√©er un script de d√©ploiement distant
$remoteScript = @"
param([string]`$MQTTBroker, [bool]`$CreateService)

# Changer vers le r√©pertoire temporaire
Set-Location `$env:TEMP\ha-agent-deploy

# Ex√©cuter l'installation
`$params = @{
    MQTTBroker = `$MQTTBroker
    CreateService = `$CreateService
    AutoStart = `$CreateService
}

.\install.ps1 @params

# Nettoyer les fichiers temporaires
Set-Location C:\
Remove-Item `$env:TEMP\ha-agent-deploy -Recurse -Force -ErrorAction SilentlyContinue
"@

Set-Content -Path "$tempPath\remote-install.ps1" -Value $remoteScript

# D√©ployer sur chaque PC
foreach ($computerName in $ComputerNames) {
    Write-Host ""
    Write-Host "=== D√©ploiement sur $computerName ===" -ForegroundColor Cyan
    
    try {
        # V√©rifier la connectivit√©
        if (-not (Test-Connection -ComputerName $computerName -Count 1 -Quiet)) {
            Write-Host "‚ùå PC $computerName non accessible" -ForegroundColor Red
            continue
        }
        
        # Cr√©er une session PS sur le PC distant
        $sessionParams = @{
            ComputerName = $computerName
        }
        if ($Credential) {
            $sessionParams.Credential = $Credential
        }
        
        $session = New-PSSession @sessionParams -ErrorAction Stop
        Write-Host "‚úÖ Session PowerShell √©tablie" -ForegroundColor Green
        
        # Copier les fichiers
        Copy-Item -Path "$tempPath\*" -Destination "$env:TEMP\ha-agent-deploy" -ToSession $session -Recurse -Force
        Write-Host "‚úÖ Fichiers copi√©s" -ForegroundColor Green
        
        # Ex√©cuter l'installation √† distance
        $result = Invoke-Command -Session $session -ScriptBlock {
            param($mqttBroker, $createSvc)
            Set-Location $env:TEMP
            if (-not (Test-Path ha-agent-deploy)) {
                New-Item -Path ha-agent-deploy -ItemType Directory -Force
            }
            Set-Location ha-agent-deploy
            .\remote-install.ps1 -MQTTBroker $mqttBroker -CreateService $createSvc
        } -ArgumentList $MQTTBroker, $CreateService
        
        Write-Host "‚úÖ Installation termin√©e sur $computerName" -ForegroundColor Green
        
        # Fermer la session
        Remove-PSSession $session
        
    }
    catch {
        Write-Host "‚ùå Erreur sur $computerName : $_" -ForegroundColor Red
    }
}

# Nettoyer les fichiers temporaires locaux
Remove-Item $tempPath -Recurse -Force -ErrorAction SilentlyContinue

Write-Host ""
Write-Host "=== D√âPLOIEMENT R√âSEAU TERMIN√â ===" -ForegroundColor Green
Write-Host ""
Write-Host "üí° Les agents sont install√©s dans C:\HA-Agent sur chaque PC" -ForegroundColor Yellow
Write-Host "üí° Chaque PC aura son propre Client ID bas√© sur son nom" -ForegroundColor Yellow